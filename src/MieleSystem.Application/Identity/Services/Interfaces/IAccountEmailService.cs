using MieleSystem.Domain.Identity.ValueObjects;

namespace MieleSystem.Application.Identity.Services.Interfaces;

/// <summary>
/// Servi√ßo de envio de e-mails relacionado a opera√ß√µes de conta no contexto de Identity.
///
/// üîπ Definido na camada Application para seguir o princ√≠pio de invers√£o de depend√™ncias (DIP).
/// üîπ Implementa√ß√µes concretas residem na camada Infrastructure.Identity.
/// üîπ Consome o ValueObject <see cref="Email"/> para garantir validade e consist√™ncia de endere√ßos.
///
/// Respons√°vel por executar comunica√ß√µes autom√°ticas de eventos importantes da conta:
/// - Boas-vindas a novos usu√°rios
/// - Envio de c√≥digos OTP (autentica√ß√£o de dois fatores)
/// - Notifica√ß√£o de altera√ß√£o de senha
///
/// Observa√ß√£o:
/// Esta interface **n√£o** deve conter l√≥gica de formata√ß√£o de templates.
/// A formata√ß√£o deve ser responsabilidade da implementa√ß√£o concreta.
/// </summary>
public interface IAccountEmailService
{
    /// <summary>
    /// Envia um e-mail de boas-vindas para um novo usu√°rio.
    /// </summary>
    /// <param name="to">Endere√ßo de e-mail de destino, encapsulado no VO <see cref="Email"/>.</param>
    /// <param name="userName">Nome de exibi√ß√£o do usu√°rio.</param>
    /// <param name="ct">Token de cancelamento opcional.</param>
    Task SendWelcomeAsync(Email to, string userName, CancellationToken ct = default);

    /// <summary>
    /// Envia um e-mail contendo c√≥digo OTP para autentica√ß√£o de dois fatores.
    /// </summary>
    /// <param name="to">Endere√ßo de e-mail de destino.</param>
    /// <param name="code">C√≥digo OTP a ser enviado.</param>
    /// <param name="expiresAtUtc">Data e hora de expira√ß√£o do c√≥digo (em UTC).</param>
    /// <param name="ct">Token de cancelamento opcional.</param>
    Task SendOtpAsync(Email to, string code, DateTime expiresAtUtc, CancellationToken ct = default);

    /// <summary>
    /// Envia um e-mail notificando altera√ß√£o de senha na conta.
    /// </summary>
    /// <param name="to">Endere√ßo de e-mail de destino.</param>
    /// <param name="changedAtUtc">Data e hora da altera√ß√£o (em UTC).</param>
    /// <param name="ct">Token de cancelamento opcional.</param>
    Task SendPasswordChangedAsync(Email to, DateTime changedAtUtc, CancellationToken ct = default);
}
